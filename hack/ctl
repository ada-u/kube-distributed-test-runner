#!/bin/bash -e

mysql_password() {
  printf $(printf '%s' `kubectl get secret kube-selenium-mysql-mysql -o jsonpath="{.data.mysql-root-password}"`) | base64 --decode
}

redis_password() {
  kubectl get secret --namespace default kube-selenium-redis-redis -o jsonpath="{.data.redis-password}" | base64 --decode
}

minio_accesskey() {
  kubectl get secret --namespace default minio-minio-user -o jsonpath="{.data.accesskey}" | base64 --decode
}

minio_secretkey() {
  kubectl get secret --namespace default minio-minio-user -o jsonpath="{.data.secretkey}" | base64 --decode
}

redis() {
  kubectl run kube-selenium-redis-redis-client --rm --tty -i --env REDIS_PASSWORD=$(redis_password) --image bitnami/redis:3.2.9-r0 -- bash
}

chrome_node_vnc_proxy() {
  kubectl port-forward --namespace default   $(kubectl get pods --namespace default \
    -l app=selenium-grid-selenium-chrome-debug \
    -o jsonpath='{ .items[0].metadata.name }') 5900
}

oauth2_test_webapp_proxy() {
  POD_NAME=$(kubectl get pods --namespace default -l "run=kube-selenium" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward --namespace default $POD_NAME 8000:8000
}

concourse_web_proxy() {
  POD_NAME=$(kubectl get pods --namespace default -l "app=concourse-web" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward --namespace default $POD_NAME 8080:8080
}

"$@"
